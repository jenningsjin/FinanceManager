CREATE TABLE USERS (
	USER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	USERNAME VARCHAR(30) NOT NULL UNIQUE,
	PASSWORD VARCHAR(30) NOT NULL,
	BALANCE FLOAT NOT NULL DEFAULT 0
);

CREATE TABLE TRANSACTIONS (
	TX_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	-- NUM_LOANERS INT NOT NULL DEFAULT 1, 
	LOANER_ID INT,
	NUM_OWERS INT NOT NULL DEFAULT 1,
	AMOUNT FLOAT NOT NULL DEFAULT 0, --This value will be based on the owers table values
	DESCRIPTION VARCHAR(240),
	TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY(LOANER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

-- CREATE TABLE LOANERS (
-- 	TX_ID INT,
-- 	USER_ID INT,
-- 	PRIMARY KEY(TX_ID, USER_ID),
-- 	FOREIGN KEY(TX_ID) REFERENCES TRANSACTIONS(TX_ID) ON DELETE CASCADE,
-- 	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
-- );

CREATE TABLE OWERS (
	AMOUNT FLOAT NOT NULL,
	TX_ID INT,
	LOANER_ID INT,
	OWER_ID INT,
	PRIMARY KEY(TX_ID, USER_ID),
	FOREIGN KEY(TX_ID) REFERENCES TRANSACTIONS(TX_ID) ON DELETE CASCADE,
	FOREIGN KEY(LOANER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

-- Triggers Required:
-- On Insert of Owers, recalc balance
-- On Insert of Loaners, recalc balance on both
-- 

DELIMITER $$
CREATE TRIGGER transaction_update AFTER INSERT ON OWERS 
	FOR EACH ROW BEGIN --For Each row we've created.
		UPDATE USERS SET balance=balance+NEW.amount WHERE USER_ID=NEW.OWER_ID;
		UPDATE USERS SET balance=balance-NEW.amount WHERE USER_ID=NEW.debtor;
	END$$
DELIMITER ;


-- DELIMITER $$
-- CREATE TRIGGER transaction_update AFTER INSERT ON OWERS 
-- 	FOR EACH ROW BEGIN --For Each row we've created.
-- 		UPDATE USERS SET balance=balance+NEW.amount WHERE id=NEW.debtee;
-- 		UPDATE USERS SET balance=balance-NEW.amount WHERE id=NEW.debtor;
-- 	END$$
-- DELIMITER ;

-- DELIMITER $$
-- CREATE TRIGGER transaction_delete AFTER DELETE ON Transactions
-- 	FOR EACH ROW BEGIN
-- 		UPDATE Users SET balance=balance-OLD.amount WHERE id=OLD.debtee;
-- 		UPDATE Users SET balance=balance+Old.amount WHERE id=OLD.debtor;
-- 	END$$
-- DELIMITER ;

-- DELIMITER $$
-- CREATE TRIGGER transaction_update AFTER UPDATE ON Transactions
-- 	FOR EACH ROW BEGIN
-- 		UPDATE Users SET balance=balance-OLD.amount+NEW.amount WHERE id=OLD.debtee;
-- 		UPDATE Users SET balance=balance+Old.amount-NEW.amount WHERE id=OLD.debtor;
-- 	END$$
-- DELIMITER ;

